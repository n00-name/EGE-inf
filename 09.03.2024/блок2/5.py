'''
Пример:
Исходная строка содержит 23 единицы и 5 двоек, других цифр нет, точный порядок расположения цифр неизвестен. Какую наибольшую сумму цифр может иметь строка, которая получится после выполнения программы?

Решение:
Здесь не важно, по какой ветке будет идти программа, прирост в сумме цифр будет всегда равен 1. Поэтому можно расположить в начале только 1, а затем все двойки в исходной строке.


Одиннадцать раз символы '11' превратятся в '3'. Тогда 11 * 3 = 33. Останутся цифры '122222'. Их сумма равна 11.


В ответе получается 33 + 11 = 44.


Ответ: 44

Конкретно это задача:

4 * 7 = 28
12 - 8 = 4 единицы
2 * 3 = 6

28 + 6 = 34
ans: 34
'''





from itertools import product
maxx = -1

for i in product('12', repeat=16):
    s = ''.join(i)

    if s.count('1') == 12 and s.count('2') == 4:

        while '11' in s:
            if '112' in s:
                s = s.replace('112','7',1)
            else:
                s = s.replace('11','3',1)

        f = sum(map(int, s))
        # print(f)
        maxx = max(maxx, f)

print(maxx)